package data

import(
	"os"
	"time"
)

var _dicUnkDic = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x41\x4a\xc3\x40\x14\x86\xff\x7f\x3a\x4e\x42\x48\x42\x09\x25\x14\x46\x3c\x80\x7b\x6f\xa0\xa0\x58\xa3\x28\x52\x3c\x40\xb5\xae\x2c\xe2\x15\xac\x01\x35\x76\xe9\x25\xbc\x87\x6b\x11\x57\xae\xbc\x82\xfb\xf7\x64\xc0\x85\x35\x4a\xcb\x6c\xde\xf7\xcf\xcf\xcc\xc7\xcb\xf4\xde\xd0\x68\x03\xea\x1d\xb0\xa1\xb7\x1d\x72\x65\xef\xe2\x72\x32\x0e\x01\x3b\x74\x83\xd1\xe9\xd5\xce\x26\x2d\x18\x1d\x9e\x9f\x8d\xbf\x67\x37\x1c\x05\xa0\x05\xa0\x4f\xda\x20\xa3\xe4\x31\xc5\x3f\x52\xdc\x04\xbf\xa1\xa0\xf8\x77\xca\x6a\xfb\xa6\xa4\xf8\x0f\x4a\xd5\x04\x70\x14\xff\x42\x71\x5b\x2d\xf8\xff\xe9\x39\x48\x28\xfe\x95\xe2\xdf\x02\xa4\x61\xa0\x44\xcf\xf3\x06\xb9\xde\x58\x1a\xad\x41\x1b\xf4\xd7\xb4\x46\x06\x9b\xc7\xbd\xb4\x9b\xbb\x6e\x51\xa4\xe8\x9b\xd2\xd9\x24\xe9\x99\x32\xee\x5b\xad\x81\x4c\x1f\xc2\x96\x66\xa0\x4e\x81\x54\xaf\x03\x4d\xc1\x14\xd0\x4f\x9d\x21\x8b\xcd\xd1\x80\xeb\x3f\xcf\x9f\xc9\xc9\xc2\x4e\x74\x5c\xed\x56\xfb\xc3\xaa\x55\xdc\x5e\x22\x59\x46\xa1\x9d\xb4\xff\x3a\x58\x24\xfe\x15\x00\x00\xff\xff\xe8\x16\x46\xe1\x36\x02\x00\x00"

func dicUnkDicBytes() ([]byte, error) {
	return bindataRead(
		_dicUnkDic,
		"dic/unk.dic",
	)
}

func dicUnkDic() (*asset, error) {
	bytes, err := dicUnkDicBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dic/unk.dic", size: 566, mode: os.FileMode(420), modTime: time.Unix(1591859871, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

